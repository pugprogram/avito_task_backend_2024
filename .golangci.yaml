# Дефолтная конфигурация для GolangCI-Lint

run:
  # Включить или отключить линтеры
  # Если true, запустятся все линтеры, указанные в секции linters.
  # Если false, linters игнорируются и используются те, что указаны в отдельной секции enabled.
  enable-all: false

  # Список папок, в которых нужно запустить линтеры
  # Если не указано, линтеры запустятся на всем проекте.
  # Включение всех директорий проекта может замедлить процесс.
  # include:
  #   - "./pkg"
  #   - "./cmd"

  include:
    - "./src"

  # Список папок, которые нужно исключить из проверки
  exclude-use-default: true
  exclude:
    - src/api

  # Максимальное количество параллельных линтеров
  concurrency: 4

  # Тайм-аут на выполнение линтеров
  timeout: 5m

linters:
  enable:
    - govet         # Проверяет потенциальные ошибки кода
    - errcheck      # Проверяет игнорирование ошибок
    - staticcheck   # Включает различные полезные проверки (например, deadcode)
    - gofmt         # Форматирование исходного кода Go
    - gosimple      # Проверяет упрощение кода
    - unused        # Проверяет неиспользуемые переменные, функции и т.д.
    - wsl

  disable:
    - gocyclo       # Проверяет сложность цикла



issues:
  # Максимальная сложность цикла (по умолчанию 10)
  max-complexity: 15

  # Минимальная оценка, которую нужно достичь для создания проблемы
  severity: warning

  # Линтеры, которые могут использовать быстрые исправления (Quick Fix)
  # Если линтер поддерживает эту функцию, линтер сможет исправить проблему автоматически
  fast: true



  # Порядок сортировки найденных ошибок (by-pos - по позиции в файле, severity - по важности)
  sort: "by-pos"

logger:
  # Уровни логирования: "debug", "info", "warn", "error", "fatal", "panic"
  level: info

  # Стиль вывода сообщений
  format: text
  # Доступные форматы: "text", "json"
  
  # Печатать детали, такие как информация о файле и строке
  with-field: true

